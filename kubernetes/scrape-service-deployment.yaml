apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -o ./kubernetes
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: scrape-service
  name: scrape-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: scrape-service
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -o ./kubernetes
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.network/microservices: "true"
        io.kompose.service: scrape-service
    spec:
      containers:
        - args:
            - /bin/bash
            - -c
            - |
              # python /service/scrape_requests/serve.py --max_workers 25
              # python /service/scrape_requests/serve.py --max_workers 25 --secure
              python -c "while True: pass"
          # image: ghcr.io/paulbroek/youtube-recommender:main
          image: ghcr.io/paulbroek/youtube-recommender:test
          # image: ghcr.io/paulbroek/youtube-recommender:latest
          name: scrape-service
          ports:
            - containerPort: 50051
          resources: {}
          volumeMounts:
            - mountPath: /run/secrets/nginx.cert
              name: nginx-cert-secret
            - mountPath: /run/secrets/nginx.key
              name: nginx-key-secret
            # - mountPath: /usr/local/lib/python3.9/site-packages/youtube_recommender/config/postgres.cfg
            - mountPath: /run/secrets/postgres.cfg
              name: postgres-cfg-secret
          env:
            - name: RELEASE_MODE
              value: PRODUCTION

      restartPolicy: Always
      volumes:
        - name: nginx-cert-secret
          secret:
            # items:
            #   - key: nginx-cert
            #     path: nginx.cert
            secretName: nginx-cert-secret
        - name: nginx-key-secret
          secret:
            # items:
            #   - key: nginx-key
            #     path: nginx.key
            secretName: nginx-key-secret
        - name: postgres-cfg-secret
          secret:
            secretName: postgres-cfg-secret
status: {}
