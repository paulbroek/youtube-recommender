version: "3.8"

services:
  redis:
    restart: unless-stopped
    image: redis
    ports:
      - "6379:6379"

  scrape-service:
    build:
      context: .
    command:
      - /bin/bash
      - -c
      - |
        python /service/scrape_requests/serve.py --max_workers 25 --debug
        # python /service/scrape_requests/serve.py --max_workers 25 --secure
        # python -c "while True: pass"
    # ports:
    #   - "50051:50051"
    expose:
      - 50051
    secrets:
      - nginx.cert
      - nginx.key
    networks:
      - microservices
    volumes:
      - ./youtube_recommender/config/postgres.cfg:/usr/local/lib/python3.9/site-packages/youtube_recommender/config/postgres.cfg

  save-server-names:
    build:
      context: .
    command:
      - /bin/bash
      - -c
      - |
        # python -c "while True: pass"
        /etc/nginx/save_server_names.sh /etc/nginx/includes/grpcservers
    volumes:
      - ./nginx:/etc/nginx
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
    depends_on:
      - scrape-service

  nginx-reverseproxy:
    image: nginx:1.13.11
    ports:
      - 127.0.0.1:1443:1443
    volumes:
      - ./nginx:/etc/nginx
    secrets:
      - nginx.cert
      - nginx.key
    depends_on:
      save-server-names:
        condition: service_completed_successfully
      # - scrape-service
    networks:
      - microservices

networks:
  microservices:
    external: true

secrets:
  nginx.cert:
    file: ./cert/nginx.cert
  nginx.key:
    file: ./cert/nginx.key
